
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
  &kp EQUAL            &kp N1        &kp N2     &kp N3     &kp N4  &kp N5                               &mo 3                                                                                                                 &mo 3  &kp N6         &kp N7     &kp N8    &kp N9         &kp N0  &kp MINUS
 &kp ESCAPE             &kp Q         &kp W      &kp E      &kp R   &kp T                               &none                                                                                                                 &none   &kp Y          &kp U      &kp I     &kp O          &kp P   &kp BSLH
    &kp TAB             &kp A         &kp S      &kp D      &kp F   &kp G                               &none            &kp GRAVE            &tog 1                        &kp PAGE_UP        &kp PAGE_DOWN                 &tog 4   &kp H          &kp J      &kp K     &kp L  &kp SEMICOLON    &kp SQT
  &kp LSHFT             &kp Z         &kp X      &kp C      &kp V   &kp B                                                               &kp LEFT_ALT                      &kp RIGHT_ALT                                               &kp N          &kp M  &kp COMMA   &kp DOT       &kp FSLH  &kp RSHFT
      &mo 2  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp ENTER  &kp SPACE                    &mt LEFT_SHIFT BACKSPACE  &mt LEFT_GUI DELETE  &kp LEFT_CONTROL                  &kp RIGHT_CONTROL  &mt RIGHT_GUI ENTER  &mt RIGHT_SHIFT SPACE          &kp BACKSPACE    &kp DEL  &kp LBKT       &kp RBKT      &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none                                                   &none  &trans   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS  &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans                  &trans  &trans   &none  &trans   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans           &kp KP_N0     &kp KP_N0     &kp KP_DOT           &trans  &trans
            >;
        };

        layer_fn {
            bindings = <
 &kp F1           &kp F2         &kp F3                &kp F4                 &kp F5     &kp F6            &trans                                                  &trans     &kp F7          &kp F8          &kp F9    &kp F10       &kp F11  &kp F12
 &trans  &kp EXCLAMATION  &kp AMPERSAND  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp TILDE             &none                                                   &none    &kp F13         &kp F14    &kp UP_ARROW    &kp F15       &kp F16   &trans
 &trans           &kp AT     &kp DOLLAR        &kp LEFT_BRACE        &kp RIGHT_BRACE  &kp GRAVE             &none  &trans  &trans                  &trans  &trans   &none      &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT   &kp PERCENT   &trans
 &trans        &kp CARET       &kp HASH      &kp LEFT_BRACKET      &kp RIGHT_BRACKET   &kp PIPE                            &trans                  &trans                  &kp UNDER       &kp MINUS        &kp PLUS  &kp EQUAL  &kp ASTERISK   &trans
 &trans           &trans         &trans                &trans                 &trans                       &trans  &trans  &trans                  &trans  &trans  &trans                     &trans          &trans     &trans        &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                 &trans                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

        layer_Gaming {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                     &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                     &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans     &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                               &trans                  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans                     &mo 5  &kp SPACE  &trans                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_GamingF {
            bindings = <
 &trans  &trans   &trans   &trans   &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &kp F1   &kp F2   &kp F3   &kp F4  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &kp F5   &kp F6   &kp F7   &kp F8  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans                            &trans                  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans   &trans   &trans   &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
